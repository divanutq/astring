(function(f) {
	if (typeof exports === "object" && typeof module !== "undefined") {
		module.exports = f();
	} else if (typeof define === "function" && define.amd) {
		define([], f);
	} else {
		var g;
		if (typeof window !== "undefined") {
			g = window;
		} else if (typeof global !== "undefined") {
			g = global;
		} else if (typeof self !== "undefined") {
			g = self;
		} else {
			g = this;
		}
		g.astravel = f();
	}
})(function() {
	var define, module, exports;
	return (function() {
		function r(e, n, t) {
			function o(i, f) {
				if (!n[i]) {
					if (!e[i]) {
						var c = "function" == typeof require && require;
						if (!f && c) return c(i, !0);
						if (u) return u(i, !0);
						var a = new Error("Cannot find module '" + i + "'");
						throw ((a.code = "MODULE_NOT_FOUND"), a);
					}
					var p = (n[i] = { exports: {} });
					e[i][0].call(
						p.exports,
						function(r) {
							var n = e[i][1][r];
							return o(n || r);
						},
						p,
						p.exports,
						r,
						e,
						n,
						t
					);
				}
				return n[i].exports;
			}
			for (
				var u = "function" == typeof require && require, i = 0;
				i < t.length;
				i++
			)
				o(t[i]);
			return o;
		}
		return r;
	})()(
		{
			1: [
				function(require, module, exports) {
					(function(a, b) {
						if ("function" == typeof define && define.amd)
							define(["exports", "./defaultTraveler"], b);
						else if ("undefined" != typeof exports)
							b(exports, require("./defaultTraveler"));
						else {
							var c = { exports: {} };
							b(c.exports, a.defaultTraveler), (a.attachComments = c.exports);
						}
					})(this, function(a, b) {
						"use strict";
						function c(a, b, c, d, e) {
							var f = b.index,
								g = b.comments,
								h = g[f],
								j = void 0,
								k = void 0;
							if (null != h) {
								if (null == d || 0 === d.length) {
									for (
										j = null == c.comments ? [] : c.comments;
										null != h && h.end < c.end;

									)
										j.push(h), (h = g[++f]);
									return (
										(b.index = f),
										void (
											0 !== j.length &&
											null == c.comments &&
											(c.comments = j)
										)
									);
								}
								if (e) {
									j = null == c.comments ? [] : c.comments;
									for (
										var o = d[0].loc.start.line - 1;
										null != h && "B" === h.type[0] && h.loc.end.line < o;

									)
										j.push(h), (h = g[++f]);
									0 !== j.length && null == c.comments && (c.comments = j);
								}
								for (var l, m = 0, n = d.length; null != h && m < n; m++) {
									for (l = d[m], j = []; null != h && h.end < l.start; )
										j.push(h), (h = g[++f]);
									null != h &&
										"L" === h.type[0] &&
										h.loc.start.line === l.loc.end.line &&
										(j.push(h), (h = g[++f])),
										0 !== j.length && (l.comments = j),
										(b.index = f),
										a[l.type](l, b),
										(f = b.index),
										(h = g[f]);
								}
								for (k = []; null != h && h.end < c.end; )
									k.push(h), (h = g[++f]);
								0 !== k.length && (c.trailingComments = k), (b.index = f);
							}
						}
						(a.__esModule = !0),
							(a.default = function(a, b) {
								return f[a.type](a, { comments: b, index: 0 }), a;
							});
						var d = (function(a) {
								return a && a.__esModule ? a : { default: a };
							})(b),
							e = void 0,
							f = d.default.makeChild({
								Program: (e = function(a, b) {
									c(this, b, a, a.body, !0);
								}),
								BlockStatement: e,
								ClassBody: e,
								ObjectExpression: function(a, b) {
									c(this, b, a, a.properties, !0);
								},
								ArrayExpression: function(a, b) {
									c(this, b, a, a.elements, !0);
								},
								SwitchStatement: function(a, b) {
									c(this, b, a, a.cases, !1);
								},
								SwitchCase: function(a, b) {
									c(this, b, a, a.consequent, !1);
								}
							});
					});
				},
				{ "./defaultTraveler": 2 }
			],
			2: [
				function(require, module, exports) {
					(function(a, b) {
						if ("function" == typeof define && define.amd)
							define(["exports"], b);
						else if ("undefined" != typeof exports) b(exports);
						else {
							var c = { exports: {} };
							b(c.exports), (a.defaultTraveler = c.exports);
						}
					})(this, function(a) {
						"use strict";
						function b(a, b) {
							if (!(a instanceof b))
								throw new TypeError("Cannot call a class as a function");
						}
						a.__esModule = !0;
						var c = void 0,
							d = void 0,
							e = void 0,
							f = void 0,
							g = void 0,
							h = void 0,
							i = Function.prototype,
							j = function a(c, d) {
								b(this, a), (this.node = c), (this.state = d);
							};
						a.default = {
							go: function c(a, b) {
								this[a.type](a, b);
							},
							find: function e(a, b, c) {
								var d = Object.create(this);
								d.go = function(b, c) {
									if (a(b, c)) throw new j(b, c);
									this[b.type](b, c);
								};
								try {
									d.go(b, c);
								} catch (a) {
									if (a instanceof j) return a;
									throw a;
								}
							},
							makeChild: function c() {
								var a =
										0 < arguments.length && void 0 !== arguments[0]
											? arguments[0]
											: {},
									b = Object.create(this);
								for (var d in ((b.super = this), a)) b[d] = a[d];
								return b;
							},
							Program: (h = function(a, b) {
								var c = a.body;
								if (null != c)
									for (var d = c.length, e = 0; e < d; e++) this.go(c[e], b);
							}),
							BlockStatement: h,
							EmptyStatement: i,
							ExpressionStatement: function c(a, b) {
								this.go(a.expression, b);
							},
							IfStatement: function c(a, b) {
								this.go(a.test, b),
									this.go(a.consequent, b),
									null != a.alternate && this.go(a.alternate, b);
							},
							LabeledStatement: function c(a, b) {
								this.go(a.label, b), this.go(a.body, b);
							},
							BreakStatement: function c(a, b) {
								a.label && this.go(a.label, b);
							},
							ContinueStatement: function c(a, b) {
								a.label && this.go(a.label, b);
							},
							WithStatement: function c(a, b) {
								this.go(a.object, b), this.go(a.body, b);
							},
							SwitchStatement: function f(a, b) {
								this.go(a.discriminant, b);
								for (var c = a.cases, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							SwitchCase: function f(a, b) {
								null != a.test && this.go(a.test, b);
								for (var c = a.consequent, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							ReturnStatement: function c(a, b) {
								a.argument && this.go(a.argument, b);
							},
							ThrowStatement: function c(a, b) {
								this.go(a.argument, b);
							},
							TryStatement: function c(a, b) {
								this.go(a.block, b),
									null != a.handler && this.go(a.handler, b),
									null != a.finalizer && this.go(a.finalizer, b);
							},
							CatchClause: function c(a, b) {
								null != a.param && this.go(a.param, b), this.go(a.body, b);
							},
							WhileStatement: function c(a, b) {
								this.go(a.test, b), this.go(a.body, b);
							},
							DoWhileStatement: function c(a, b) {
								this.go(a.body, b), this.go(a.test, b);
							},
							ForStatement: function c(a, b) {
								null != a.init && this.go(a.init, b),
									null != a.test && this.go(a.test, b),
									null != a.update && this.go(a.update, b),
									this.go(a.body, b);
							},
							ForInStatement: (c = function(a, b) {
								this.go(a.left, b), this.go(a.right, b), this.go(a.body, b);
							}),
							DebuggerStatement: i,
							FunctionDeclaration: (d = function(a, b) {
								null != a.id && this.go(a.id, b);
								var c = a.params;
								if (null != c)
									for (var d = 0, e = c.length; d < e; d++) this.go(c[d], b);
								this.go(a.body, b);
							}),
							VariableDeclaration: function f(a, b) {
								for (var c = a.declarations, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							VariableDeclarator: function c(a, b) {
								this.go(a.id, b), null != a.init && this.go(a.init, b);
							},
							ArrowFunctionExpression: function f(a, b) {
								var c = a.params;
								if (null != c)
									for (var d = 0, e = c.length; d < e; d++) this.go(c[d], b);
								this.go(a.body, b);
							},
							ThisExpression: i,
							ArrayExpression: (g = function(a, b) {
								for (var c, d = a.elements, e = d.length, f = 0; f < e; f++)
									(c = d[f]), null != c && this.go(d[f], b);
							}),
							ObjectExpression: function f(a, b) {
								for (var c = a.properties, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							Property: function c(a, b) {
								this.go(a.key, b), a.shorthand || this.go(a.value, b);
							},
							FunctionExpression: d,
							SequenceExpression: function f(a, b) {
								for (var c = a.expressions, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							UnaryExpression: function c(a, b) {
								this.go(a.argument, b);
							},
							UpdateExpression: function c(a, b) {
								this.go(a.argument, b);
							},
							AssignmentExpression: function c(a, b) {
								this.go(a.left, b), this.go(a.right, b);
							},
							BinaryExpression: (f = function(a, b) {
								this.go(a.left, b), this.go(a.right, b);
							}),
							LogicalExpression: f,
							ConditionalExpression: function c(a, b) {
								this.go(a.test, b),
									this.go(a.consequent, b),
									this.go(a.alternate, b);
							},
							NewExpression: function c(a, b) {
								this.CallExpression(a, b);
							},
							CallExpression: function f(a, b) {
								this.go(a.callee, b);
								for (var c = a.arguments, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							MemberExpression: function c(a, b) {
								this.go(a.object, b), this.go(a.property, b);
							},
							Identifier: i,
							Literal: i,
							ForOfStatement: c,
							ClassDeclaration: function c(a, b) {
								a.id && this.go(a.id, b),
									a.superClass && this.go(a.superClass, b),
									this.go(a.body, b);
							},
							ClassBody: h,
							ImportDeclaration: function f(a, b) {
								for (var c = a.specifiers, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
								this.go(a.source, b);
							},
							ImportNamespaceSpecifier: function c(a, b) {
								this.go(a.local, b);
							},
							ImportDefaultSpecifier: function c(a, b) {
								this.go(a.local, b);
							},
							ImportSpecifier: function c(a, b) {
								this.go(a.imported, b), this.go(a.local, b);
							},
							ExportDefaultDeclaration: function c(a, b) {
								this.go(a.declaration, b);
							},
							ExportNamedDeclaration: function f(a, b) {
								a.declaration && this.go(a.declaration, b);
								for (var c = a.specifiers, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
								a.source && this.go(a.source, b);
							},
							ExportSpecifier: function c(a, b) {
								this.go(a.local, b), this.go(a.exported, b);
							},
							ExportAllDeclaration: function c(a, b) {
								this.go(a.source, b);
							},
							MethodDefinition: function c(a, b) {
								this.go(a.key, b), this.go(a.value, b);
							},
							ClassExpression: function c(a, b) {
								this.ClassDeclaration(a, b);
							},
							Super: i,
							RestElement: (e = function(a, b) {
								this.go(a.argument, b);
							}),
							SpreadElement: e,
							YieldExpression: function c(a, b) {
								a.argument && this.go(a.argument, b);
							},
							TaggedTemplateExpression: function c(a, b) {
								this.go(a.tag, b), this.go(a.quasi, b);
							},
							TemplateLiteral: function j(a, b) {
								for (
									var c = a.quasis, d = a.expressions, e = 0, f = d.length;
									e < f;
									e++
								)
									this.go(d[e], b);
								for (var g = 0, h = c.length; g < h; g++) this.go(c[g], b);
							},
							TemplateElement: i,
							ObjectPattern: function f(a, b) {
								for (var c = a.properties, d = c.length, e = 0; e < d; e++)
									this.go(c[e], b);
							},
							ArrayPattern: g,
							AssignmentPattern: function c(a, b) {
								this.go(a.left, b), this.go(a.right, b);
							},
							MetaProperty: function c(a, b) {
								this.go(a.meta, b), this.go(a.property, b);
							},
							AwaitExpression: function c(a, b) {
								this.go(a.argument, b);
							}
						};
					});
				},
				{}
			],
			3: [
				function(require, module, exports) {
					(function(a, b) {
						if ("function" == typeof define && define.amd)
							define(["exports", "./defaultTraveler"], b);
						else if ("undefined" != typeof exports)
							b(exports, require("./defaultTraveler"));
						else {
							var c = { exports: {} };
							b(c.exports, a.defaultTraveler), (a.getDocumentation = c.exports);
						}
					})(this, function(a, b) {
						"use strict";
						function c(a) {
							if (null == a) return null;
							var b = a.comments;
							if (null == b || !b.length) return null;
							for (var c, d = b.length, e = 0; e < d; e++)
								if (((c = b[e]), "B" === c.type[0])) return c;
						}
						function d(a, b) {
							var d = { name: b, node: a, comment: c(a) || c(a.body) };
							return d;
						}
						function e(a, b) {
							return (
								(null != b.children || null != b.comment) &&
									(null == a.children && (a.children = []), a.children.push(b)),
								a
							);
						}
						(a.__esModule = !0),
							(a.default = function(a) {
								var b = { scope: d(a, null) };
								return g[a.type](a, b), b.scope;
							});
						var f = (function(a) {
								return a && a.__esModule ? a : { default: a };
							})(b),
							g = f.default.makeChild({
								VariableDeclaration: function(a, b) {
									if (1 === a.declarations.length) {
										var c = a.declarations[0],
											f = b.scope;
										(b.scope = d(a, c.id.name)),
											this.super.VariableDeclarator(c, b),
											(b.scope = e(f, b.scope));
									}
								},
								FunctionDeclaration: function(a, b) {
									var c = b.scope;
									(b.scope = d(a, a.id.name)),
										this.super.FunctionDeclaration(a, b),
										(b.scope = e(c, b.scope));
								},
								ArrowFunctionExpression: function(a, b) {
									var c = b.scope;
									(b.scope = d(a, a.id.name)),
										this.super.ArrowFunctionExpression(a, b),
										(b.scope = e(c, b.scope));
								},
								ClassDeclaration: function(a, b) {
									var c = b.scope;
									(b.scope = d(a, a.id.name)),
										this.super.FunctionDeclaration(a, b),
										(b.scope = e(c, b.scope));
								},
								Property: function(a, b) {
									var c = a.callee.type;
									switch (c) {
										case "FunctionExpression":
										case "ArrowFunctionExpression": {
											var f = b.scope;
											(b.scope = d(a, a.key.name)),
												this.super[c](a.value, b),
												(b.scope = e(f, b.scope));
											break;
										}
										default:
									}
								},
								MethodDefinition: function(a, b) {
									var c = a.callee.type;
									switch (c) {
										case "FunctionExpression": {
											var f = b.scope;
											(b.scope = d(a, a.key.name)),
												this.super[c](a.value, b),
												(b.scope = e(f, b.scope));
											break;
										}
										default:
									}
								},
								CallExpression: function(a, b) {
									var c = a.callee.type;
									switch (c) {
										case "FunctionExpression":
										case "ArrowFunctionExpression":
											this.super[c](a.callee, b);
											break;
										default:
									}
								}
							});
					});
				},
				{ "./defaultTraveler": 2 }
			],
			astravel: [
				function(require, module, exports) {
					(function(a, b) {
						if ("function" == typeof define && define.amd)
							define([
								"exports",
								"./defaultTraveler",
								"./attachComments",
								"./getDocumentation"
							], b);
						else if ("undefined" != typeof exports)
							b(
								exports,
								require("./defaultTraveler"),
								require("./attachComments"),
								require("./getDocumentation")
							);
						else {
							var c = { exports: {} };
							b(
								c.exports,
								a.defaultTraveler,
								a.attachComments,
								a.getDocumentation
							),
								(a.astravel = c.exports);
						}
					})(this, function(a, b, c, d) {
						"use strict";
						function e(a) {
							return a && a.__esModule ? a : { default: a };
						}
						(a.__esModule = !0),
							(a.getDocumentation = a.makeTraveler = a.attachComments = a.defaultTraveler = void 0);
						var f = e(b),
							g = e(c),
							h = e(d);
						(a.defaultTraveler = f.default),
							(a.attachComments = g.default),
							(a.makeTraveler = function(a) {
								return f.default.makeChild(a);
							}),
							(a.getDocumentation = h.default);
					});
				},
				{
					"./attachComments": 1,
					"./defaultTraveler": 2,
					"./getDocumentation": 3
				}
			]
		},
		{},
		[]
	)("astravel");
});
//# sourceMappingURL=astravel.min.map
